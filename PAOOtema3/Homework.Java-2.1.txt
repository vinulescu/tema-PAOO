import json

class Config:
    _instance = None
    _data = None
    _file_path = "config.json"  # Numele fișierului de configurare

    def __new__(cls):
        if cls._instance is None:
            cls._instance = super(Config, cls).__new__(cls)
        return cls._instance

    def _load_config(self):
        if self._data is None:
            try:
                with open(self._file_path, 'r') as f:
                    self._data = json.load(f)
            except FileNotFoundError:
                print(f"Eroare: Fișierul de configurare '{self._file_path}' nu a fost găsit.")
                self._data = {}
            except json.JSONDecodeError:
                print(f"Eroare: Fișierul de configurare '{self._file_path}' conține un JSON invalid.")
                self._data = {}

    def getColor(self):
        self._load_config()
        return self._data.get("color")

    def getWeight(self):
        self._load_config()
        return self._data.get("weight")

# Exemplu de utilizare:

# Creează fișierul config.json (dacă nu există)
with open("config.json", "w") as f:
    json.dump({"color": "#123456", "weight": 42}, f)

# Obține instanța Singleton
config1 = Config()
config2 = Config()

# Verifică dacă sunt aceeași instanță
print(f"config1 este aceeași instanță cu config2: {config1 is config2}")

# Accesează datele (vor fi citite din fișier la prima accesare)
culoare1 = config1.getColor()
greutate1 = config1.getWeight()

culoare2 = config2.getColor()
greutate2 = config2.getWeight()

print(f"Culoare (config1): {culoare1}")
print(f"Greutate (config1): {greutate1}")
print(f"Culoare (config2): {culoare2}")
print(f"Greutate (config2): {greutate2}")

# Modifică fișierul config.json (pentru a demonstra că instanța existentă nu se reîncarcă)
with open("config.json", "w") as f:
    json.dump({"color": "#ABCDEF", "weight": 99}, f)

# Accesează din nou datele (ar trebui să fie valorile vechi, deoarece nu s-a reîncărcat)
culoare3 = config1.getColor()
greutate3 = config1.getWeight()

print(f"Culoare (config1) după modificare fișier: {culoare3}")
print(f"Greutate (config1) după modificare fișier: {greutate3}")